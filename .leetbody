{"typed_code":"class Solution:\n    def solveNQueens(self, n: int) -> List[List[str]]:\n        column = set()\n        positive_diagonal = set()\n        negative_diagonal = set()\n        \n        res = []\n        board = [[\".\"] * n for i in range(n)]\n\n        def backtrack(row):\n            if row == n:\n                copy = [\"\".join(row) for row in board]\n                res.append(copy)\n                return\n            for char in range(n):\n                if char in column or (row + char) in positive_diagonal or (row - char) in negative_diagonal:\n                    continue\n\n                column.add(char)\n                positive_diagonal.add(row + char)\n                negative_diagonal.add(row - char)\n                board[row][char] = \"Q\"\n\n                backtrack(row+1)\n\n                column.remove(char)\n                positive_diagonal.remove(row + char)\n                negative_diagonal.remove(row - char)\n                board[row][char] = \".\"\n        backtrack(0)\n        return res","question_id":"51","lang":"python3"}