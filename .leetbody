{"question_id":"17","typed_code":"class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        res = []\n        digit_to_char = {\n            \"2\": \"abc\",\n            \"3\": \"def\",\n            \"4\": \"ghi\",\n            \"5\": \"jkl\",\n            \"6\": \"mno\",\n            \"7\": \"pqrs\",\n            \"8\": \"tuv\",\n            \"9\": \"wxyz\",\n        }\n\n        def backtrack(idx, current_string):\n            if len(current_string) == len(digits):\n                res.append(current_string)\n                return\n            for char in digit_to_char[digits[idx]]:\n                backtrack(idx + 1 , current_string + char)\n\n        if digits:\n            backtrack(0, \"\")\n\n        return res\n        ","lang":"python3"}