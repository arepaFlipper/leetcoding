{"question_id":"1036","lang":"python3","typed_code":"class Solution:\n    def orangesRotting(self, grid: List[List[int]]) -> int:\n        q = collections.deque()\n        (fresh, time) = (0,0)\n\n        for row in range(len(grid)):\n            for col in range(len(grid[0])):\n                if grid[row][col] == 1:\n                    fresh += 1\n                if grid[row][col] == 2:\n                    q.append((row,col))\n\n        directions = [[0,1],[0,-1], [1,0], [-1,0]]\n        while fresh > 0 and q:\n            length = len(q)\n            for idx in range(length):\n                (row, col) = q.popleft()\n\n                for (row_direction,col_direction) in directions:\n                    (delta_row,delta_col) = (row + row_direction, col + col_direction)\n                    if((delta_row in range(len(grid))) and (delta_col in range(len(grid[0]))) and (grid[delta_row][delta_col] == 1)):\n                        grid[delta_row][delta_col] = 2\n                        q.append((delta_row,delta_col))\n                        fresh -= 1\n            time += 1\n        return time if fresh == 0 else -1"}