{"lang":"python3","typed_code":"class Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        if not grid: return 0\n    \n        (ROWS, COLS) = len(grid), len(grid[0])\n        visited = set()\n        islands = 0\n\n        def bfs(r,c):\n            q = deque()\n            visited.add((r,c))\n            q.append((r,c))\n\n            while q:\n                (row,col) = q.popleft()\n                directions = [[1,0],[-1,0],[0,1],[0,-1]]\n\n                for (dr,dc) in directions:\n                    (r,c) = (row + dr, col + dc)\n                    if (r) in range(ROWS) and (c)in range(COLS) and grid[r][c] == '1' and (r,c) not in visited:\n                        q.append((r, c))\n                        visited.add((r,c))\n\n        for r in range(ROWS):\n            for c in range(COLS):\n                if grid[r][c] == \"1\" and (r,c) not in visited:\n                    bfs(r,c)\n                    islands += 1\n        return islands","question_id":"200"}