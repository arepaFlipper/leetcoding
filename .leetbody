{"lang":"python3","typed_code":"class Solution:\n    def maxProfit(self, prices: List[int]) -> int:        \n        dp = {}\n\n        def depth_first_search(idx: int,buying: bool):\n            if (idx >= len(prices)):\n                return 0\n            if (idx,buying) in dp:\n                return dp[(idx, buying)]\n            \n            cooldown = depth_first_search(idx + 1, buying)\n\n            if buying:\n                buy = depth_first_search(idx + 1, not buying) - prices[idx]\n                dp[(idx, buying)] = max(buy, cooldown)\n            else:\n                sell = depth_first_search(idx +2, not buying) + prices[idx]\n                dp[(idx, buying)] = max(sell, cooldown)\n            return dp[(idx, buying)]\n        return depth_first_search(0, True)","question_id":"309"}