[
  {
    "neetcode150": true,
    "blind75": true,
    "problem": "Invert Binary Tree",
    "pattern": "Trees",
    "link": "invert-binary-tree/",
    "video": "OnSn2XEQ4MY",
    "difficulty": "Easy",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "0226-invert-binary-tree",
    "c": true,
    "csharp": true,
    "typescript": true,
    "go": true,
    "ruby": true,
    "swift": true,
    "kotlin": true
  },
  {
    "neetcode150": true,
    "blind75": true,
    "problem": "Maximum Depth of Binary Tree",
    "pattern": "Trees",
    "link": "maximum-depth-of-binary-tree/",
    "video": "hTM3phVI6YQ",
    "difficulty": "Easy",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "0104-maximum-depth-of-binary-tree",
    "c": true,
    "csharp": true,
    "typescript": true,
    "go": true,
    "ruby": true,
    "swift": true,
    "kotlin": true,
    "rust": true
  },
  {
    "neetcode150": true,
    "problem": "Diameter of Binary Tree",
    "pattern": "Trees",
    "link": "diameter-of-binary-tree/",
    "video": "bkxqA8Rfv04",
    "difficulty": "Easy",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "0543-diameter-of-binary-tree",
    "c": true,
    "csharp": true,
    "typescript": true,
    "go": true,
    "ruby": true,
    "swift": true,
    "kotlin": true
  },
  {
    "neetcode150": true,
    "problem": "Balanced Binary Tree",
    "pattern": "Trees",
    "link": "balanced-binary-tree/",
    "video": "QfJsau0ItOY",
    "difficulty": "Easy",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "0110-balanced-binary-tree",
    "c": true,
    "csharp": true,
    "typescript": true,
    "go": true,
    "ruby": true,
    "swift": true,
    "kotlin": true
  },
  {
    "neetcode150": true,
    "blind75": true,
    "problem": "Same Tree",
    "pattern": "Trees",
    "link": "same-tree/",
    "video": "vRbbcKXCxOw",
    "difficulty": "Easy",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "0100-same-tree",
    "c": true,
    "csharp": true,
    "typescript": true,
    "go": true,
    "ruby": true,
    "swift": true,
    "kotlin": true,
    "rust": true
  },
  {
    "neetcode150": true,
    "blind75": true,
    "problem": "Subtree of Another Tree",
    "pattern": "Trees",
    "link": "subtree-of-another-tree/",
    "video": "E36O5SWp-LE",
    "difficulty": "Easy",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "0572-subtree-of-another-tree",
    "c": true,
    "csharp": true,
    "typescript": true,
    "go": true,
    "ruby": true,
    "swift": true,
    "kotlin": true,
    "scala": true
  },
  {
    "neetcode150": true,
    "blind75": true,
    "problem": "Lowest Common Ancestor of a Binary Search Tree",
    "pattern": "Trees",
    "link": "lowest-common-ancestor-of-a-binary-search-tree/",
    "video": "gs2LMfuOR9k",
    "difficulty": "Medium",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "0235-lowest-common-ancestor-of-a-binary-search-tree",
    "c": true,
    "csharp": true,
    "typescript": true,
    "go": true,
    "ruby": true,
    "swift": true,
    "kotlin": true,
    "scala": true
  },
  {
    "neetcode150": true,
    "blind75": true,
    "problem": "Binary Tree Level Order Traversal",
    "pattern": "Trees",
    "link": "binary-tree-level-order-traversal/",
    "video": "6ZnyEApgFYg",
    "difficulty": "Medium",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "0102-binary-tree-level-order-traversal",
    "c": true,
    "csharp": true,
    "typescript": true,
    "go": true,
    "ruby": true,
    "swift": true,
    "kotlin": true,
    "rust": true
  },
  {
    "neetcode150": true,
    "problem": "Binary Tree Right Side View",
    "pattern": "Trees",
    "link": "binary-tree-right-side-view/",
    "video": "d4zLyf32e3I",
    "difficulty": "Medium",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "0199-binary-tree-right-side-view",
    "c": true,
    "csharp": true,
    "typescript": true,
    "swift": true,
    "kotlin": true,
    "go": true,
    "rust": true
  },
  {
    "neetcode150": true,
    "problem": "Count Good Nodes In Binary Tree",
    "pattern": "Trees",
    "link": "count-good-nodes-in-binary-tree/",
    "video": "7cp5imvDzl4",
    "difficulty": "Medium",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "1448-count-good-nodes-in-binary-tree",
    "c": true,
    "csharp": true,
    "typescript": true,
    "go": true,
    "swift": true,
    "kotlin": true,
    "rust": true
  },
  {
    "neetcode150": true,
    "blind75": true,
    "problem": "Validate Binary Search Tree",
    "pattern": "Trees",
    "link": "validate-binary-search-tree/",
    "video": "s6ATEkipzow",
    "difficulty": "Medium",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "0098-validate-binary-search-tree",
    "c": true,
    "csharp": true,
    "typescript": true,
    "go": true,
    "swift": true,
    "kotlin": true,
    "rust": true
  },
  {
    "neetcode150": true,
    "blind75": true,
    "problem": "Kth Smallest Element In a Bst",
    "pattern": "Trees",
    "link": "kth-smallest-element-in-a-bst/",
    "video": "5LUXSvjmGCw",
    "difficulty": "Medium",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "0230-kth-smallest-element-in-a-bst",
    "c": true,
    "csharp": true,
    "typescript": true,
    "go": true,
    "swift": true,
    "kotlin": true,
    "scala": true
  },
  {
    "neetcode150": true,
    "blind75": true,
    "problem": "Construct Binary Tree From Preorder And Inorder Traversal",
    "pattern": "Trees",
    "link": "construct-binary-tree-from-preorder-and-inorder-traversal/",
    "video": "ihj4IQGZ2zc",
    "difficulty": "Medium",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "0105-construct-binary-tree-from-preorder-and-inorder-traversal",
    "c": true,
    "csharp": true,
    "typescript": true,
    "kotlin": true,
    "go": true
  },
  {
    "neetcode150": true,
    "blind75": true,
    "problem": "Binary Tree Maximum Path Sum",
    "pattern": "Trees",
    "link": "binary-tree-maximum-path-sum/",
    "video": "Hr5cWUld4vU",
    "difficulty": "Hard",
    "code": "0124-binary-tree-maximum-path-sum",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "c": true,
    "csharp": true,
    "typescript": true,
    "go": true,
    "swift": true,
    "kotlin": true
  },
  {
    "neetcode150": true,
    "blind75": true,
    "problem": "Serialize And Deserialize Binary Tree",
    "pattern": "Trees",
    "link": "serialize-and-deserialize-binary-tree/",
    "video": "u4JAi2JJhI8",
    "difficulty": "Hard",
    "python": true,
    "java": true,
    "cpp": true,
    "javascript": true,
    "code": "0297-serialize-and-deserialize-binary-tree",
    "c": true,
    "csharp": true,
    "kotlin": true,
    "go": true
  }
]
